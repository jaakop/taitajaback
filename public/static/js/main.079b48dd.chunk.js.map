{"version":3,"sources":["pages/logos/logoWhite.svg","content/SolarData.js","modules/Solar.js","modules/ComOp.js","modules/Footer.js","pages/Main-Page.js","pages/Login-Page.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","GetSolarData","a","async","axios","get","then","res","DOMParser","parseFromString","data","Solar","props","state","panels","GetData","bind","this","solarTable","length","computerUsage","Computerdata","PcAmount","PcUsage","MacAmount","MacUsage","ChromeAmount","ChromeUsage","day","powerAMount","shineAmount","solarCapacity","gridCapacity","i","parseInt","getElementsByTagName","innerHTML","Math","round","push","className","align","colSpan","setState","React","Component","ComOp","optimized","floor","GetRoomByNumber","RenderAFloor","UpdateFloor","leftDisable","rightDisable","changeButton","onClick","e","disabled","event","number","roomSetup","ComputerData","Rooms","NormalSetup","room","AiSetup","map","_room","RoomNumber","floorNumber","render","ComputerType","rowSpan","Amount","Footer","MainPage","loginRedirect","cookieChecked","CheckCookie","to","src","require","width","cookies","Cookies","token","post","endPoints","domain","checkToken","status","catch","console","log","LoginPage","username","password","loginFailed","redirect","loading","HandleChange","Submit","submitButton","type","value","onSubmit","placeholder","name","onChange","target","preventDefault","login","set","path","App","exact","component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.079b48dd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logoWhite.7844cf80.svg\";","import axios from 'axios';\r\n\r\nasync function GetSolarData(){\r\n    return(\r\n        await axios.get('https://public.bc.fi/katta/taitaja2020/paneeli.xml').then((res)=>{   \r\n            let parser = new DOMParser();\r\n            let data = parser.parseFromString(res.data, 'text/xml');\r\n            return(data);\r\n        })\r\n    );\r\n}\r\nexport default GetSolarData;","import React from 'react';\r\n\r\nimport GetSolarData from '../content/SolarData';\r\nimport Computerdata from '../content/Computers.json';\r\n\r\nclass Solar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            panels: []\r\n        }\r\n\r\n        this.GetData = this.GetData.bind(this);\r\n\r\n        this.GetData();\r\n    }\r\n    render() {\r\n        let panels = this.state.panels;\r\n\r\n        let solarTable = [];\r\n\r\n        if (panels.length > 0) {\r\n            let computerUsage = (Computerdata.PcAmount * Computerdata.PcUsage * 6) + (Computerdata.MacAmount * Computerdata.MacUsage * 6) + (Computerdata.ChromeAmount * Computerdata.ChromeUsage * 6);\r\n            for (let day = 1; day < 3; day++) {\r\n                let powerAMount = 0;\r\n                let shineAmount = 0;\r\n                let solarCapacity = 100;\r\n                let gridCapacity = 0;\r\n                for (let i = 0; i < panels.length; i++) {\r\n                    powerAMount += parseInt(panels[i].getElementsByTagName('tuotanto_' + day)[0].innerHTML);\r\n                    shineAmount += parseInt(panels[i].getElementsByTagName('paiste_' + day)[0].innerHTML)\r\n                }\r\n                shineAmount = shineAmount / panels.length;\r\n                if (powerAMount < computerUsage) {\r\n                    solarCapacity = Math.round((powerAMount / computerUsage) * 100);\r\n                    gridCapacity = 100 - solarCapacity;\r\n                }\r\n                solarTable.push(<table className='solarTable' align='center'>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th colSpan={5}>Päivämäärä {panels[0].getElementsByTagName('pvm_' + day)[0].innerHTML}, paistetta keskimäärin {shineAmount} tuntia/paneeli</th>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Paneelit 1-{panels.length}</td>\r\n                            <td>Tuotanto kWh</td>\r\n                            <td>Tietokoneiden  kulutus kWh</td>\r\n                            <td>Aurinkovoiman kattama %-osuus</td>\r\n                            <td>Verkkovirran %-osuus</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Yhteensä</td>\r\n                            <td>{powerAMount}</td>\r\n                            <td>{computerUsage}</td>\r\n                            <td>{solarCapacity}</td>\r\n                            <td>{gridCapacity}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>);\r\n            }\r\n        }\r\n        return (\r\n            <div className='solar contentBox'>\r\n                <h2>Aurinkopaneelien tuotanto</h2>\r\n                <div>\r\n                {solarTable}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    async GetData() {\r\n        let data = await GetSolarData();\r\n        this.setState({ panels: data.getElementsByTagName('paneeli') });\r\n    }\r\n}\r\nexport default Solar;","import React from 'react';\r\n\r\nimport ComputerData from '../content/Computers.json';\r\n\r\nclass ComOp extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            optimized: false,\r\n            floor: 1\r\n        }\r\n\r\n        this.GetRoomByNumber = this.GetRoomByNumber.bind(this);\r\n        this.RenderAFloor = this.RenderAFloor.bind(this);\r\n        this.UpdateFloor = this.UpdateFloor.bind(this);\r\n    }\r\n    render() {\r\n        let leftDisable = false;\r\n        let rightDisable = false;\r\n        let changeButton = <button onClick={(e) => this.setState({ optimized: true })}>Optimoi</button>;\r\n        if (this.state.floor === 1)\r\n            leftDisable = true;\r\n        if (this.state.floor === 2)\r\n            rightDisable = true\r\n        if (this.state.optimized)\r\n            changeButton = <button onClick={(e) => this.setState({ optimized: false })}>Palauta</button>\r\n        return (\r\n            <div className='comOp contentBox'>\r\n                <h2>Luokkien tietokoneet</h2>\r\n                <div>\r\n                    <button onClick={(e) => this.UpdateFloor(e, -1)} disabled={leftDisable}>{'<'}</button>\r\n                    {this.RenderAFloor(this.state.floor)}\r\n                    <button onClick={(e) => this.UpdateFloor(e, 1)} disabled={rightDisable}>{'>'}</button>\r\n                </div>\r\n                <br/>\r\n                {changeButton}\r\n            </div>\r\n        );\r\n    }\r\n    UpdateFloor(event, number) {\r\n        this.setState({ floor: this.state.floor + number })\r\n    }\r\n    GetRoomByNumber(number) {\r\n        let roomSetup = ComputerData.Rooms.NormalSetup;\r\n        let room = null;\r\n        if (this.state.optimized)\r\n            roomSetup = ComputerData.Rooms.AiSetup\r\n        roomSetup.map(_room => {\r\n            if (_room.RoomNumber == number) {\r\n                room = _room;\r\n                return;\r\n            }\r\n        })\r\n        return (room);\r\n    }\r\n    RenderAFloor(floorNumber) {\r\n        let render;\r\n        if (floorNumber === 1) {\r\n            render = <table className='computerTable'>\r\n                <tbody>\r\n                    <tr>\r\n                        <td className={this.GetRoomByNumber(15).ComputerType} rowSpan={2}>15 <br/> {this.GetRoomByNumber(15).ComputerType}<br/>{this.GetRoomByNumber(15).Amount} kpl</td>\r\n                        <td className={this.GetRoomByNumber(14).ComputerType}>14 <br/> {this.GetRoomByNumber(14).ComputerType}<br/>{this.GetRoomByNumber(14).Amount} kpl</td>\r\n                        <td className={this.GetRoomByNumber(13).ComputerType}>13 <br/> {this.GetRoomByNumber(13).ComputerType}<br/>{this.GetRoomByNumber(13).Amount} kpl</td>\r\n                        <td className={this.GetRoomByNumber(12).ComputerType}>12 <br/> {this.GetRoomByNumber(12).ComputerType}<br/>{this.GetRoomByNumber(12).Amount} kpl</td>\r\n                        <td className={this.GetRoomByNumber(11).ComputerType}>11 <br/> {this.GetRoomByNumber(11).ComputerType}<br/>{this.GetRoomByNumber(11).Amount} kpl</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td></tr>\r\n                    <tr>\r\n                        <td className={this.GetRoomByNumber(16).ComputerType} rowSpan={2}>16 <br/> {this.GetRoomByNumber(16).ComputerType}<br/>{this.GetRoomByNumber(16).Amount} kpl</td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td></tr>\r\n                    <tr>\r\n                        <td className={this.GetRoomByNumber(17).ComputerType}>17 <br/> {this.GetRoomByNumber(17).ComputerType}<br/>{this.GetRoomByNumber(17).Amount} kpl</td>\r\n                        <td className={this.GetRoomByNumber(18).ComputerType}>18 <br/> {this.GetRoomByNumber(18).ComputerType}<br/>{this.GetRoomByNumber(18).Amount} kpl</td>\r\n                        <td></td>\r\n                        <td></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        }\r\n        else if (floorNumber === 2) {\r\n            render = <table className='computerTable'>\r\n                <tbody>\r\n                    <tr>\r\n                        <td className={this.GetRoomByNumber(25).ComputerType} rowSpan={2}>25 <br/> {this.GetRoomByNumber(25).ComputerType}<br/>{this.GetRoomByNumber(25).Amount} kpl</td>\r\n                        <td className={this.GetRoomByNumber(24).ComputerType}>24 <br/> {this.GetRoomByNumber(24).ComputerType}<br/>{this.GetRoomByNumber(24).Amount} kpl</td>\r\n                        <td className={this.GetRoomByNumber(23).ComputerType}>23 <br/> {this.GetRoomByNumber(23).ComputerType}<br/>{this.GetRoomByNumber(23).Amount} kpl</td>\r\n                        <td></td>\r\n                        <td></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td></tr>\r\n                    <tr>\r\n                        <td className={this.GetRoomByNumber(26).ComputerType} rowSpan={2}>26 <br/> {this.GetRoomByNumber(26).ComputerType}<br/>{this.GetRoomByNumber(26).Amount} kpl</td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td></tr>\r\n                    <tr>\r\n                        <td className={this.GetRoomByNumber(27).ComputerType}>27 <br/> {this.GetRoomByNumber(27).ComputerType}<br/>{this.GetRoomByNumber(27).Amount} kpl</td>\r\n                        <td className={this.GetRoomByNumber(28).ComputerType}>28 <br/> {this.GetRoomByNumber(28).ComputerType}<br/>{this.GetRoomByNumber(28).Amount} kpl</td>\r\n                        <td></td>\r\n                        <td></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        }\r\n        return render\r\n    }\r\n}\r\nexport default ComOp;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return(\r\n        <div className='footer'>\r\n            <div className='languageMenu'>\r\n                <a className='link'><b>FI</b></a>|<a className='link'>SE</a>|<a className='link'>EN</a>\r\n            </div>\r\n            <div className='linkCollection'>\r\n                <h3>Link collection 1</h3>\r\n                <p><a className='link'>Link 1</a></p>\r\n                <p><a className='link'>Link 2</a></p>\r\n                <p><a className='link'>Link 3</a></p>\r\n                <p><a className='link'>Link 4</a></p>\r\n                <p><a className='link'>Link 5</a></p>\r\n                <p><a className='link'>Link 6</a></p>\r\n                <p><a className='link'>Link 7</a></p>\r\n                <p><a className='link'>Link 8</a></p>\r\n            </div>\r\n            <div className='linkCollection'>\r\n                <h3>Link collection 2</h3>\r\n                <p><a className='link'>Link 1</a></p>\r\n                <p><a className='link'>Link 2</a></p>\r\n                <p><a className='link'>Link 3</a></p>\r\n                <p><a className='link'>Link 4</a></p>\r\n                <p><a className='link'>Link 5</a></p>\r\n                <p><a className='link'>Link 6</a></p>\r\n                <p><a className='link'>Link 7</a></p>\r\n                <p><a className='link'>Link 8</a></p>\r\n            </div>\r\n            <div className='linkCollection'>\r\n                <h3>Link collection 3</h3>\r\n                <p><a className='link'>Link 1</a></p>\r\n                <p><a className='link'>Link 2</a></p>\r\n                <p><a className='link'>Link 3</a></p>\r\n                <p><a className='link'>Link 4</a></p>\r\n                <p><a className='link'>Link 5</a></p>\r\n                <p><a className='link'>Link 6</a></p>\r\n                <p><a className='link'>Link 7</a></p>\r\n                <p><a className='link'>Link 8</a></p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Footer;","import React from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Cookies from 'universal-cookie';\r\n\r\nimport Solar from '../modules/Solar';\r\nimport ComOp from '../modules/ComOp';\r\nimport Footer from '../modules/Footer';\r\n\r\nimport endPoints from '../config/endPoints.json';\r\n\r\nimport './styles/mainStyle.css';\r\nimport { removeTypeDuplicates } from '@babel/types';\r\n\r\nclass MainPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loginRedirect: false,\r\n            cookieChecked: false\r\n        }\r\n        this.CheckCookie = this.CheckCookie.bind(this);\r\n    }\r\n    componentDidMount(){\r\n        this.CheckCookie();\r\n    }\r\n    render() {\r\n        let loginRedirect;\r\n        if (this.state.loginRedirect)\r\n            loginRedirect = <Redirect to='/login'></Redirect>\r\n        if (this.state.cookieChecked) {\r\n            return (\r\n                <div className='main'>\r\n                    {loginRedirect}\r\n                    <div className='header'>\r\n                        <img src={require('./logos/logoWhite.svg')} width={300}></img>\r\n                        <br />\r\n                        <div className='info'>Tietoja\r\n                        <div className='megaMenu'>\r\n                                <a className='link'> Link 1 </a>\r\n                                <a className='link'> Link 2 </a>\r\n                                <a className='link'> Link 3 </a>\r\n                                <a className='link'> Link 4 </a>\r\n                                <a className='link'> Link 5 </a>\r\n                                <a className='link'> Link 6 </a>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div>\r\n                        <Solar></Solar>\r\n                        <ComOp></ComOp>\r\n                    </div>\r\n                    <Footer></Footer>\r\n                </div>\r\n            );\r\n\r\n        }\r\n        else{\r\n            return(<div>{loginRedirect}</div>);\r\n        }\r\n    }\r\n    async CheckCookie(){\r\n        \r\n        const cookies = new Cookies();\r\n        let token;\r\n        try{\r\n            token = cookies.get('loginToken')\r\n        }\r\n        catch{\r\n            this.setState({loginRedirect: true});\r\n            return;\r\n        }\r\n        if(!token){\r\n            this.setState({loginRedirect: true});\r\n            return;\r\n        }\r\n        await axios.post(endPoints.domain + endPoints.checkToken, {\r\n            token: token\r\n        }).then((res) => {\r\n            if(res.status !== 200)\r\n                this.setState({loginRedirect: true});\r\n            else\r\n                this.setState({cookieChecked: true});\r\n        }).catch(() => {\r\n            console.log('ree');\r\n            this.setState({loginRedirect: true});\r\n            return;\r\n        })\r\n    \r\n    }\r\n}\r\nexport default MainPage;","import React from 'react';\r\nimport axios from 'axios';\r\nimport Cookies from 'universal-cookie';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport Footer from '../modules/Footer';\r\n\r\nimport endPoints from '../config/endPoints.json';\r\nimport './styles/mainStyle.css';\r\nimport { timeout } from 'q';\r\nimport { isCompositeComponent } from 'react-dom/test-utils';\r\n\r\nclass LoginPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            loginFailed: false,\r\n            redirect: false,\r\n            loading: false,\r\n            loginRedirect: false,\r\n            cookieChecked: false\r\n        }\r\n        this.HandleChange = this.HandleChange.bind(this);\r\n        this.Submit = this.Submit.bind(this);\r\n        this.CheckCookie = this.CheckCookie.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.CheckCookie();\r\n    }\r\n    render() {\r\n        let loginFailed;\r\n        let redirect;\r\n        let submitButton;\r\n\r\n        if (this.state.loginFailed)\r\n            loginFailed = <p>Väärä käyttäjänimi tai salasana</p>\r\n        if (this.state.redirect || this.state.loginRedirect)\r\n            redirect = <Redirect to='/'></Redirect>\r\n        submitButton = <input type='Submit' value='Kirjaudu sisään' disabled={this.state.loading}></input>;\r\n        if (this.state.cookieChecked) {\r\n            return (\r\n                <div>\r\n                    {redirect}\r\n                    <div className='header'>\r\n                        <img src={require('./logos/logoWhite.svg')} width={300}></img>\r\n                    </div>\r\n                    <div className='login'>\r\n                        <form onSubmit={this.Submit}>\r\n                            {loginFailed}\r\n                            <input type='text' placeholder='Käyttäjänimi' value={this.state.username} name='username' onChange={this.HandleChange}></input><br />\r\n                            <input type='password' placeholder='Salasana' value={this.state.password} name='password' onChange={this.HandleChange}></input><br />\r\n                            {submitButton}\r\n                        </form>\r\n                    </div>\r\n                    <Footer></Footer>\r\n                </div>\r\n            );\r\n\r\n        }\r\n        else {\r\n            return (<div>{redirect}</div>);\r\n        }\r\n    }\r\n    HandleChange(event) {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n    async Submit(event) {\r\n        event.preventDefault();\r\n        this.setState({ loading: true });\r\n        const cookies = new Cookies();\r\n        axios.post(endPoints.domain + endPoints.login, {\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        }).then((res) => {\r\n            if (res.status === 200) {\r\n                cookies.set('loginToken', res.data.token, { path: '/' });\r\n                this.setState({ redirect: true, loading: false });\r\n            }\r\n            else\r\n                this.setState({ loginFailed: true, loading: false });\r\n        }).catch(() => {\r\n            this.setState({ loginFailed: true, loading: false });\r\n        })\r\n    }\r\n    async CheckCookie() {\r\n\r\n        const cookies = new Cookies();\r\n        let token;\r\n        try {\r\n            token = cookies.get('loginToken')\r\n        }\r\n        catch{\r\n            this.setState({ cookieChecked: true });\r\n            return;\r\n        }\r\n        if (!token) {\r\n            this.setState({ cookieChecked: true });\r\n            return;\r\n        }\r\n        await axios.post(endPoints.domain + endPoints.checkToken, {\r\n            token: token\r\n        }).then((res) => {\r\n            if (res.status !== 200)\r\n                this.setState({ cookieChecked: true });\r\n            else\r\n                this.setState({ loginRedirect:true });\r\n        }).catch(() => {\r\n            this.setState({ cookieChecked: true });\r\n            return;\r\n        })\r\n\r\n    }\r\n}\r\nexport default LoginPage;","import React from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n\nimport MainPage from './pages/Main-Page';\nimport LoginPage from './pages/Login-Page';\n\nconst App = () => {\n  return (\n    <Router>\n      <Route exact path='/' component={MainPage}></Route>\n      <Route path='/login' component={LoginPage}></Route>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}